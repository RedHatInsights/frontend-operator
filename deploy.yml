apiVersion: v1
kind: Template
metadata:
  name: frontend-operator
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      control-plane: controller-manager
    name: frontend-operator-system
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: bundles.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: Bundle
      listKind: BundleList
      plural: bundles
      singular: bundle
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Bundle is the Schema for the Bundles API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BundleSpec defines the desired state of Bundle
              properties:
                appList:
                  items:
                    type: string
                  type: array
                customNav:
                  items:
                    properties:
                      appId:
                        type: string
                      dynamicNav:
                        type: string
                      expandable:
                        type: boolean
                      filterable:
                        type: boolean
                      groupId:
                        type: string
                      href:
                        type: string
                      icon:
                        type: string
                      isExternal:
                        type: boolean
                      navItems:
                        items:
                          properties:
                            appId:
                              type: string
                            expandable:
                              type: boolean
                            filterable:
                              type: boolean
                            groupId:
                              type: string
                            href:
                              type: string
                            isExternal:
                              type: boolean
                            notifier:
                              type: string
                            permissions:
                              items:
                                properties:
                                  args:
                                    items:
                                      type: string
                                    type: array
                                  method:
                                    type: string
                                required:
                                - method
                                type: object
                              type: array
                            product:
                              type: string
                            routes:
                              items:
                                description: EmbeddedRoutes allow deeply nested navs
                                  to have support for routes
                                properties:
                                  appId:
                                    type: string
                                  href:
                                    type: string
                                  product:
                                    type: string
                                  title:
                                    type: string
                                type: object
                              type: array
                            title:
                              type: string
                          required:
                          - title
                          type: object
                        type: array
                      permissions:
                        items:
                          properties:
                            args:
                              items:
                                type: string
                              type: array
                            method:
                              type: string
                          required:
                          - method
                          type: object
                        type: array
                      product:
                        type: string
                      routes:
                        items:
                          description: EmbeddedRoutes allow deeply nested navs to
                            have support for routes
                          properties:
                            appId:
                              type: string
                            href:
                              type: string
                            product:
                              type: string
                            title:
                              type: string
                          type: object
                        type: array
                      title:
                        type: string
                    required:
                    - title
                    type: object
                  type: array
                envName:
                  type: string
                extraNavItems:
                  items:
                    properties:
                      name:
                        type: string
                      navItem:
                        properties:
                          appId:
                            type: string
                          dynamicNav:
                            type: string
                          expandable:
                            type: boolean
                          filterable:
                            type: boolean
                          groupId:
                            type: string
                          href:
                            type: string
                          icon:
                            type: string
                          isExternal:
                            type: boolean
                          navItems:
                            items:
                              properties:
                                appId:
                                  type: string
                                expandable:
                                  type: boolean
                                filterable:
                                  type: boolean
                                groupId:
                                  type: string
                                href:
                                  type: string
                                isExternal:
                                  type: boolean
                                notifier:
                                  type: string
                                permissions:
                                  items:
                                    properties:
                                      args:
                                        items:
                                          type: string
                                        type: array
                                      method:
                                        type: string
                                    required:
                                    - method
                                    type: object
                                  type: array
                                product:
                                  type: string
                                routes:
                                  items:
                                    description: EmbeddedRoutes allow deeply nested
                                      navs to have support for routes
                                    properties:
                                      appId:
                                        type: string
                                      href:
                                        type: string
                                      product:
                                        type: string
                                      title:
                                        type: string
                                    type: object
                                  type: array
                                title:
                                  type: string
                              required:
                              - title
                              type: object
                            type: array
                          permissions:
                            items:
                              properties:
                                args:
                                  items:
                                    type: string
                                  type: array
                                method:
                                  type: string
                              required:
                              - method
                              type: object
                            type: array
                          product:
                            type: string
                          routes:
                            items:
                              description: EmbeddedRoutes allow deeply nested navs
                                to have support for routes
                              properties:
                                appId:
                                  type: string
                                href:
                                  type: string
                                product:
                                  type: string
                                title:
                                  type: string
                              type: object
                            type: array
                          title:
                            type: string
                        required:
                        - title
                        type: object
                    required:
                    - name
                    - navItem
                    type: object
                  type: array
                id:
                  description: Foo is an example field of Bundle. Edit Bundle_types.go
                    to remove/update
                  type: string
                title:
                  type: string
              required:
              - id
              type: object
            status:
              description: BundleStatus defines the observed state of Bundle
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: frontendenvironments.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: FrontendEnvironment
      listKind: FrontendEnvironmentList
      plural: frontendenvironments
      shortNames:
      - feenv
      singular: frontendenvironment
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.targetNamespace
        name: Namespace
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FrontendEnvironment is the Schema for the FrontendEnvironments
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FrontendEnvironmentSpec defines the desired state of FrontendEnvironment
              properties:
                akamaiCacheBustImage:
                  description: Set Akamai Cache Bust Image
                  type: string
                akamaiCacheBustURL:
                  description: Set Akamai Cache Bust URL that the files will hang
                    off of
                  type: string
                akamaiSecretName:
                  description: The name of the secret we will use to get the akamai
                    credentials
                  type: string
                enableAkamaiCacheBust:
                  description: Enable Akamai Cache Bust
                  type: boolean
                generateNavJSON:
                  description: GenerateNavJSON determines if the nav json configmap
                    parts should be generated for the bundles. We want to do do this
                    in epehemeral environments but not in production
                  type: boolean
                hostname:
                  description: Hostname
                  type: string
                ingressClass:
                  description: Ingress class
                  type: string
                monitoring:
                  description: MonitorMode determines where a ServiceMonitor object
                    will be placed local will add it to the frontend's namespace app-interface
                    will add it to "openshift-customer-monitoring"
                  properties:
                    disabled:
                      type: boolean
                    mode:
                      enum:
                      - local
                      - app-interface
                      type: string
                  required:
                  - disabled
                  - mode
                  type: object
                ssl:
                  description: SSL mode requests SSL from the services in openshift
                    and k8s and then applies them to the pod, the route is also set
                    to reencrypt in the case of OpenShift
                  type: boolean
                sso:
                  description: Foo is an example field of FrontendEnvironment. Edit
                    FrontendEnvironment_types.go to remove/update
                  type: string
                whitelist:
                  description: Whitelist CIDRs
                  items:
                    type: string
                  type: array
              required:
              - sso
              type: object
            status:
              description: FrontendEnvironmentStatus defines the observed state of
                FrontendEnvironment
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: frontends.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: Frontend
      listKind: FrontendList
      plural: frontends
      shortNames:
      - fe
      singular: frontend
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.deployments.readyDeployments
        name: Ready
        type: integer
      - jsonPath: .status.deployments.managedDeployments
        name: Managed
        type: integer
      - jsonPath: .spec.envName
        name: EnvName
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Frontend is the Schema for the frontends API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FrontendSpec defines the desired state of Frontend
              properties:
                API:
                  properties:
                    versions:
                      items:
                        type: string
                      type: array
                  required:
                  - versions
                  type: object
                akamaiCacheBustDisable:
                  description: Akamai cache bust opt-out
                  type: boolean
                akamaiCacheBustPaths:
                  description: Files to cache bust
                  items:
                    type: string
                  type: array
                assetsPrefix:
                  type: string
                deploymentRepo:
                  type: string
                disabled:
                  type: boolean
                envName:
                  type: string
                frontend:
                  properties:
                    paths:
                      items:
                        type: string
                      type: array
                  required:
                  - paths
                  type: object
                image:
                  type: string
                module:
                  properties:
                    config:
                      x-kubernetes-preserve-unknown-fields: true
                    fullProfile:
                      type: boolean
                    manifestLocation:
                      type: string
                    moduleID:
                      type: string
                    modules:
                      items:
                        properties:
                          dependencies:
                            items:
                              type: string
                            type: array
                          id:
                            type: string
                          module:
                            type: string
                          optionalDependencies:
                            items:
                              type: string
                            type: array
                          routes:
                            items:
                              properties:
                                dynamic:
                                  type: boolean
                                exact:
                                  type: boolean
                                pathname:
                                  type: string
                                props:
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - pathname
                              type: object
                            type: array
                        required:
                        - id
                        - module
                        - routes
                        type: object
                      type: array
                  required:
                  - manifestLocation
                  type: object
                navItems:
                  items:
                    properties:
                      appId:
                        type: string
                      dynamicNav:
                        type: string
                      expandable:
                        type: boolean
                      filterable:
                        type: boolean
                      groupId:
                        type: string
                      href:
                        type: string
                      icon:
                        type: string
                      isExternal:
                        type: boolean
                      navItems:
                        items:
                          properties:
                            appId:
                              type: string
                            expandable:
                              type: boolean
                            filterable:
                              type: boolean
                            groupId:
                              type: string
                            href:
                              type: string
                            isExternal:
                              type: boolean
                            notifier:
                              type: string
                            permissions:
                              items:
                                properties:
                                  args:
                                    items:
                                      type: string
                                    type: array
                                  method:
                                    type: string
                                required:
                                - method
                                type: object
                              type: array
                            product:
                              type: string
                            routes:
                              items:
                                description: EmbeddedRoutes allow deeply nested navs
                                  to have support for routes
                                properties:
                                  appId:
                                    type: string
                                  href:
                                    type: string
                                  product:
                                    type: string
                                  title:
                                    type: string
                                type: object
                              type: array
                            title:
                              type: string
                          required:
                          - title
                          type: object
                        type: array
                      permissions:
                        items:
                          properties:
                            args:
                              items:
                                type: string
                              type: array
                            method:
                              type: string
                          required:
                          - method
                          type: object
                        type: array
                      product:
                        type: string
                      routes:
                        items:
                          description: EmbeddedRoutes allow deeply nested navs to
                            have support for routes
                          properties:
                            appId:
                              type: string
                            href:
                              type: string
                            product:
                              type: string
                            title:
                              type: string
                          type: object
                        type: array
                      title:
                        type: string
                    required:
                    - title
                    type: object
                  type: array
                service:
                  type: string
                serviceMonitor:
                  properties:
                    disabled:
                      type: boolean
                  type: object
                title:
                  type: string
              required:
              - API
              - deploymentRepo
              - envName
              - frontend
              - title
              type: object
            status:
              description: FrontendStatus defines the observed state of Frontend
              properties:
                conditions:
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                deployments:
                  properties:
                    managedDeployments:
                      format: int32
                      type: integer
                    readyDeployments:
                      format: int32
                      type: integer
                  required:
                  - managedDeployments
                  - readyDeployments
                  type: object
                ready:
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: frontend-operator-controller-manager
    namespace: frontend-operator-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: frontend-operator-leader-election-role
    namespace: frontend-operator-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: frontend-operator-bundle-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: frontend-operator-bundle-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: frontend-operator-frontend-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: frontend-operator-frontend-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: frontend-operator-frontendenvironment-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: frontend-operator-frontendenvironment-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: frontend-operator-manager-role
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    - events
    - namespaces
    - persistentvolumeclaims
    - secrets
    - serviceaccounts
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ''
    resources:
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles/finalizers
    verbs:
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - bundles/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments/finalizers
    verbs:
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontendenvironments/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends/finalizers
    verbs:
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - frontends/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - prometheuses
    - servicemonitors
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: frontend-operator-metrics-reader
  rules:
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: frontend-operator-proxy-role
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: frontend-operator-leader-election-rolebinding
    namespace: frontend-operator-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: frontend-operator-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: frontend-operator-controller-manager
    namespace: frontend-operator-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: frontend-operator-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: frontend-operator-manager-role
  subjects:
  - kind: ServiceAccount
    name: frontend-operator-controller-manager
    namespace: frontend-operator-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: frontend-operator-proxy-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: frontend-operator-proxy-role
  subjects:
  - kind: ServiceAccount
    name: frontend-operator-controller-manager
    namespace: frontend-operator-system
- apiVersion: v1
  data:
    controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\n\
      kind: ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :8081\nmetrics:\n\
      \  bindAddress: 127.0.0.1:8080\nwebhook:\n  port: 9443\nleaderElection:\n  leaderElect:\
      \ true\n  resourceName: 1dd43857.cloud.redhat.com\n"
  kind: ConfigMap
  metadata:
    name: frontend-operator-manager-config
    namespace: frontend-operator-system
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
    name: frontend-operator-controller-manager-metrics-service
    namespace: frontend-operator-system
  spec:
    ports:
    - name: https
      port: 8443
      targetPort: https
    selector:
      control-plane: controller-manager
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
      operator-name: frontend-operator
    name: frontend-operator-controller-manager-metrics-service-non-auth
    namespace: frontend-operator-system
  spec:
    ports:
    - name: metrics
      port: 8080
      targetPort: metrics
    selector:
      control-plane: controller-manager
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: operator doesn't need more
        than one
    labels:
      control-plane: controller-manager
      operator-name: frontend-operator
    name: frontend-operator-controller-manager
    namespace: frontend-operator-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: controller-manager
        operator-name: frontend-operator
    template:
      metadata:
        labels:
          control-plane: controller-manager
          operator-name: frontend-operator
      spec:
        containers:
        - args:
          - --leader-elect
          command:
          - /manager
          image: ${IMAGE}:${IMAGE_TAG}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
          - containerPort: 8080
            name: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 200m
              memory: 900Mi
            requests:
              cpu: 100m
              memory: 500Mi
          securityContext:
            allowPrivilegeEscalation: false
        securityContext:
          runAsNonRoot: true
        serviceAccountName: frontend-operator-controller-manager
        terminationGracePeriodSeconds: 10
parameters:
- name: IMAGE_TAG
  required: true
- name: IMAGE
  value: quay.io/cloudservices/frontend-operator

